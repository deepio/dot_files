#!/bin/sh
function cleanpip() {
  pip freeze | xargs pip uninstall -y
}

function pidof() {
  ps -A | grep -i "$@" | awk '{print $1}'
}

function run() {
  # Phasing out run in favor of entr.
  # EG:
  #   ls *.go | entr sh -c "go build; ./nanny"
  while true
    do sleep 2 &&
    DATE=`date '+%b-%d %H:%M:%S'`
    echo ''
    echo 'Updated: ' $DATE
    python main.py
  done
}

function startdt() {
  bash --login '/Applications/Docker/Docker Quickstart Terminal.app/Contents/Resources/Scripts/start.sh'
}

function stopdocker() {
  docker stop $(docker ps -aq)
}

function killdocker() {
  echo 'This is the Docker Master Obliterator ;)'
  {
    docker stop --time 1 $(docker ps -aq)
    docker rm --force $(docker ps -aq)
    docker rmi --force $(docker image ls -q)
    docker volume rm --force $(docker volume ls -q)
    docker network rm $(docker network ls -q)
  } &> /dev/null
  echo 'Done.'
}

function http2ssh() {
  REPO_URL=`git remote -v |  awk '{print $2; exit}'`;
  USER=${REPO_URL#*:}; USER=${USER%%/*}
  REPO=${REPO_URL#*/}; REPO=${REPO%%.*}

  if [ -z "$REPO_URL" ]; then
    echo "-- ERROR:  Could not identify Repo url."
    echo "   It is possible this repo is already using SSH instead of HTTPS."
    return 1
  fi

  if [ -z "$USER" ]; then
    echo "-- ERROR:  Could not identify User."
    return 1
  fi

  if [ -z "$REPO" ]; then
    echo "-- ERROR:  Could not identify Repo."
    return 1
  fi

  NEW_URL="git@github.com:$USER/$REPO.git"
  echo "Changing repo url from"
  echo "  '$REPO_URL'"
  echo "      to "
  echo "  '$NEW_URL'"
  echo ""

  git remote set-url origin `echo $NEW_URL`

  echo "Success"
}
